<?xml version="1.0" encoding="UTF-8"?>
<!--用来完成对与service层所有对象的管理-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--组建扫描器会自动扫描指定目录下的所有注解，对于注解@service,@controller,@component的类自动进行实例化，所以service里面的对象就不需要自己创建了-->
    <context:component-scan base-package="com.EEshopingMall.content.service"/>
    <!-- 使用dubbo发布服务 -->
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <!---service将要上传的application 名字—-->
    <dubbo:application name="ee-content" />
    <!--连接注册中心，注册中心的地址是服务的调用者和提供者都知道的，相当于房产中介的电话号码，房东和租房子的都知道-->
    <dubbo:registry protocol="zookeeper"
                    address="192.168.25.144:2181" />
    <!-- 用dubbo协议在20880端口暴露服务，这个就相当于房东的地址或者联系电话，当租房子的在注册中心询问时，就会把这个地址暴露给他，就可以调用里面的方法了-->
    <dubbo:protocol name="dubbo" port="20881" />
    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="com.EEshopingMall.content.service.ContentCategoryService" ref="contentCategoryServiceImpl"/>
    <dubbo:service interface="com.EEshopingMall.content.service.ContentService" ref="contentServiceImpl"/>


</beans>